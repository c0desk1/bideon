---
// src/pages/blog/category/[...slug].astro
const prerender = true;
import Layout from '@/layouts/CategoryLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import type { PaginateFunction } from 'astro';
import { POSTS_PER_PAGE } from '@/content/config';


export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
    

  const allPosts = await getCollection('blog');
  
  const allCategories = [...new Set(allPosts.map((post) => post.data.category).filter((cat): cat is string => typeof cat === 'string'))];


  return allCategories.flatMap((category) => {

    const categorySlug = category.toLowerCase().replace(/\s+/g, '-');

    const filteredPosts = allPosts

      .filter((post) => post.data.category === category)

      .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

    const paginatedPages = paginate(filteredPosts, {
      pageSize: POSTS_PER_PAGE,
      props: { rawCategory: category },
    });

    return paginatedPages.map((paginatedPage) => {
    	
      const slug = paginatedPage.props.page.currentPage === 1
        ? categorySlug
        : `${categorySlug}/${paginatedPage.props.page.currentPage}`;
      
      return {
        params: { slug },
        props: paginatedPage.props,
      };
    });
  });
}

const { slug } = Astro.params;
const { page, rawCategory } = Astro.props;

const categorySlug = slug.split('/')[0];
const postsOnThisPage = page.data;

function formatDate(date: Date) {
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  return new Date(date).toLocaleDateString('id-ID', options);
}

const seoTitle = `Kategori: ${rawCategory} - Halaman ${page.currentPage}`;
const seoDescription = `Semua postingan blog tentang ${rawCategory}. Halaman ${page.currentPage}.`;
---

<Layout title={seoTitle} description={seoDescription}>
  <section class="container mx-auto px-4 py-16 md:py-24">
    <div class="text-center mb-12">
      <h1 class="text-4xl sm:text-5xl font-bold text-white">{rawCategory}</h1>
      <p class="mt-2 text-zinc-400 max-w-lg mx-auto">
        Menampilkan postingan di kategori "{rawCategory}". Halaman {page.currentPage} dari {page.lastPage}.
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {postsOnThisPage.map((post) => (
        <a href={`/blog/${post.slug}`} class="block bg-zinc-800 rounded-lg shadow-lg overflow-hidden transition-transform duration-200 hover:scale-[1.02] hover:shadow-2xl group">
          {typeof post.data.heroImage === 'string' && post.data.heroImage && (
            <img
              src={post.data.heroImage}
              alt={post.data.description || post.data.title}
              width="600"
              height="400"
              loading="lazy"
              class="w-full h-48 object-cover group-hover:opacity-90 transition-opacity duration-200"
            />
          )}
          <div class="p-6">
            <h3 class="text-xl font-semibold text-white mb-2 group-hover:text-blue-400 transition-colors duration-200">
              {post.data.title}
            </h3>
            {post.data.description && <p class="text-zinc-400 text-sm mb-3">{post.data.description}</p>}
            
            <div class="text-zinc-500 text-xs flex flex-wrap items-center gap-x-2 gap-y-1 mb-3">
              {post.data.author && <span class="flex items-center"><span>{post.data.author}</span></span>}
              {post.data.author && post.data.category && <span class="mx-0.5">â€¢</span>}
              {post.data.category && <span class="bg-blue-600 text-white px-2 py-0.5 rounded-full text-xs">{post.data.category}</span>}
            </div>

            <p class="text-zinc-500 text-xs">{formatDate(post.data.pubDate)}</p>
          </div>
        </a>
      ))}
    </div>

    {page.lastPage > 1 && (
      <nav class="mt-12 flex justify-center gap-2">
        {page.url.prev && <a href={page.url.prev} class="px-4 py-2 bg-zinc-700 text-white rounded hover:bg-zinc-600">Sebelumnya</a>}
        
        {Array.from({ length: page.lastPage }, (_, i) => {
          const pageNum = i + 1;
          const path = pageNum === 1 ? `/blog/category/${categorySlug}` : `/blog/category/${categorySlug}/${pageNum}`;
          return (
             <a
              href={path}
              class:list={['px-3 py-2 rounded-lg text-white', pageNum === page.currentPage ? 'bg-blue-600' : 'bg-zinc-800 hover:bg-zinc-700']}
            >
              {pageNum}
            </a>
          )
        })}

        {page.url.next && <a href={page.url.next} class="px-4 py-2 bg-zinc-700 text-white rounded-full hover:bg-zinc-600">Selanjutnya</a>}
      </nav>
    )}
  </section>
</Layout>