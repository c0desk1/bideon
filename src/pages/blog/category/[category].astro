---
// src/pages/blog/category/[category].astro
import Layout from '../../../layouts/CategoryLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

// Dapatkan parameter 'category' dari URL
export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const allCategories = [...new Set(allPosts.map((post) => post.data.category).filter((c): c is string => typeof c === 'string'))];

  return allCategories.map((category) => ({
    params: { category: category.toLowerCase().replace(/\s+/g, '-') },
    props: { rawCategory: category },
  }));
}

const { category } = Astro.params;
const { rawCategory } = Astro.props;

const allPosts: CollectionEntry<'blog'>[] = await getCollection('blog');

const categoryPosts = allPosts.filter((post) => {
  if (!post.data.category) return false;

  const postCategorySlug = post.data.category.toLowerCase().replace(/\s+/g, '-');
  return postCategorySlug === category;
});

// Helper untuk format tanggal
function formatDate(date: Date) {
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  return date.toLocaleDateString('id-ID', options);
}

const seoTitle = `Postingan Blog Kategori: ${rawCategory || category}`;
const seoDescription = `Semua postingan blog tentang ${rawCategory || category}.`;
---

<Layout title={seoTitle} description={seoDescription}>
  <section class="container mx-auto px-4 py-16 md:py-24">
    <div class="text-center mb-12">
      <h1 class="text-4xl sm:text-5xl font-bold text-white">Kategori: {rawCategory || category}</h1>
      <p class="mt-2 text-zinc-400 max-w-lg mx-auto">
        Semua postingan blog tentang {rawCategory || category}.
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {categoryPosts.length > 0 ? (
        categoryPosts.map((post) => (
          <a href={`/blog/category/${category.toLowerCase().replace(/\s+/g, '-')}`} class="block bg-zinc-800 rounded-lg shadow-lg overflow-hidden transition-transform duration-200 hover:scale-[1.02] hover:shadow-2xl group">
            {typeof post.data.heroImage === 'string' && post.data.heroImage && (
              <img
                src={post.data.heroImage}
                alt={post.data.description || post.data.title}
                width="600"
                height="400"
                loading="lazy"
                class="w-full h-48 object-cover group-hover:opacity-90 transition-opacity duration-200"
              />
            )}
            <div class="p-6">
              <h3 class="text-xl font-semibold text-white mb-2 group-hover:text-blue-400 transition-colors duration-200">
                {post.data.title}
              </h3>
              {post.data.description && (
                <p class="text-zinc-400 text-sm mb-3">
                  {post.data.description}
                </p>
              )}
              
              <div class="text-zinc-500 text-xs flex flex-wrap items-center gap-x-2 gap-y-1 mb-3">
                  {post.data.author && (
                      <span class="flex items-center">
                          <span>{post.data.author}</span>
                      </span>
                  )}
                  {post.data.author && post.data.category && <span class="mx-0.5">â€¢</span>}
                  {post.data.category && (
                      <span class="bg-blue-600 text-white px-2 py-0.5 rounded-full text-xs">
                          {post.data.category}
                      </span>
                  )}
              </div>

              <p class="text-zinc-500 text-xs">
                {formatDate(post.data.pubDate)}
              </p>
            </div>
          </a>
        ))
      ) : (
        <p class="text-center text-zinc-400 col-span-full">Tidak ada postingan di kategori ini.</p>
      )}
    </div>
  </section>
</Layout>