---
// src/components/SystemAlert.astro
---
<a href="/system-status" class="system-alert" id="system-alert-link">
    <div class="alert-content">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="icon">
        <path id="icon-path-safe" fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clip-rule="evenodd" />
        <path id="icon-path-warning" class="hidden" fill-rule="evenodd" d="M9.401 3.003c1.155-2 4.043-2 5.197 0l7.153 12.492c1.155 2-.291 4.5-2.599 4.5H4.847c-2.308 0-3.754-2.5-2.599-4.5L9.401 3.003ZM12 8.25a.75.75 0 0 1 .75.75v3.75a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75Zm0 6a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z" clip-rule="evenodd" />
      </svg>
      <span class="text" id="alert-text">Memuat status sistem...</span>
    </div>
  </a>
  
  <style>
    .system-alert {
      display: flex;
      justify-content: center;
      align-items: center;
      width: fit-content;
      margin: 2rem auto;
      padding: 0.75rem 1.5rem;
      border: 1px solid;
      border-radius: 0.5rem;
      text-decoration: none;
      font-size: 0.9rem;
      font-weight: 500;
      transition: all 0.2s ease-in-out;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      background-color: transparent;
      color: inherit;
      font-family: inherit;
    }
  
    .system-alert:hover {
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transform: translateY(-2px);
    }
  
    .alert-content {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
  
    .icon {
      width: 1.25rem;
      height: 1.25rem;
    }
  
    .hidden {
      display: none;
    }
  
    /* Warna status */
    .system-alert.status-safe {
      background-color: var(--geist-accents-1); /* Light background */
      border-color: var(--geist-accents-2); /* Slightly darker border */
      color: var(--geist-accents-7); /* Dark grey text */
    }
    .system-alert.status-safe .icon {
      color: var(--geist-success); /* Vercel blue for checkmark */
    }
  
    .system-alert.status-warning {
      background-color: #fffbeb; /* Kuning muda */
      border-color: #fef08a; /* Border kuning */
      color: #a16207; /* Teks kuning gelap */
    }
    .system-alert.status-warning .icon {
      color: var(--geist-warning); /* Vercel warning yellow */
    }
  
    .system-alert.status-error {
      background-color: #fef2f2; /* Merah muda */
      border-color: #fecaca; /* Border merah */
      color: #dc2626; /* Teks merah gelap */
    }
    .system-alert.status-error .icon {
      color: var(--geist-error); /* Vercel error red */
    }
  </style>
  
  <script is:inline>
    document.addEventListener('DOMContentLoaded', async () => {
      const alertLinkElement = document.getElementById('system-alert-link');
      const alertTextElement = document.getElementById('alert-text');
      const iconPathSafe = document.getElementById('icon-path-safe');
      const iconPathWarning = document.getElementById('icon-path-warning');
  
      const fetchSystemStatus = async () => {
        try {
          const response = await fetch('/api/system-status.json');
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const data = await response.json();
  
          alertLinkElement.classList.remove('status-safe', 'status-warning', 'status-error');
          iconPathSafe.classList.add('hidden');
          iconPathWarning.classList.add('hidden');
  
          if (data.status === 'aman') {
            alertLinkElement.classList.add('status-safe');
            alertTextElement.textContent = data.message || 'Semua Sistem Aman';
            iconPathSafe.classList.remove('hidden');
          } else if (data.status === 'bermasalah') {
            alertLinkElement.classList.add('status-error');
            alertTextElement.textContent = data.message || 'Sistem Bermasalah! Klik untuk detail.';
            iconPathWarning.classList.remove('hidden');
          } else if (data.status === 'perhatian') {
            alertLinkElement.classList.add('status-warning');
            alertTextElement.textContent = data.message || 'Perhatian! Ada pemeliharaan sistem.';
            iconPathWarning.classList.remove('hidden');
          } else {
            alertLinkElement.classList.add('status-warning');
            alertTextElement.textContent = 'Status sistem tidak diketahui.';
            iconPathWarning.classList.remove('hidden');
          }
  
        } catch (error) {
          console.error('Gagal mengambil status sistem:', error);
          alertLinkElement.classList.remove('status-safe', 'status-warning', 'status-error');
          alertLinkElement.classList.add('status-error');
          alertTextElement.textContent = 'Gagal memuat status sistem. Coba lagi nanti.';
          iconPathWarning.classList.remove('hidden');
        }
      };
  
      fetchSystemStatus();
      setInterval(fetchSystemStatus, 30 * 1000);
    });
  </script>
