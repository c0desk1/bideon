---
// src/components/PostTOC.astro
import type { TocItem } from '../utils/toc';
const { toc = [] }: { toc?: TocItem[] } = Astro.props;
---

<aside class="mb-8 p-4 rounded-xl border border-white/10 bg-white/5 backdrop-blur-md text-sm text-white/80 shadow-md">
  <h2 class="text-white text-base font-semibold mb-3 tracking-wide">Daftar Isi</h2>
  <ul class="space-y-1 list-disc pl-5" id="toc-list">
    {toc.map((item) => (
      <li
        class={`${item.level === 3 ? 'list-none pl-5 text-white/60' : ''}`}
        data-id={item.id}>
        <a href={`#${item.id}`} class="inline-block transition-colors duration-150 text-muted hover:text-white">
          {item.text}
        </a>
      </li>
    ))}
  </ul>
</aside>

<script type="module">
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach(entry => {
        const id = entry.target.getAttribute('id');
        const link = document.querySelector(`#toc-list [data-id="${id}"] a`);
        if (link) {
          if (entry.isIntersecting) {
            document.querySelectorAll('#toc-list a').forEach(el => {
              el.classList.remove('text-white', 'font-semibold');
              el.classList.add('text-muted');
            });
            link.classList.add('text-white', 'font-semibold');
            link.classList.remove('text-muted');
          }
        }
      });
    },
    {
      rootMargin: '0px 0px -70% 0px',
      threshold: 0.1
    }
  );

  document.querySelectorAll('h2, h3').forEach((section) => {
    observer.observe(section);
  });
</script>
