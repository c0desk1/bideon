---
interface Props {
  title?: string;
  rightIcon?: "bookmark" | "share";
}

const {
  title = "Bima Akbar",
  rightIcon = "bookmark"
} = Astro.props;

const navItems = [
  { label: "Home", href: "/" },
  { label: "Blog", href: "/blog" },
  { label: "About", href: "/about" },
  { label: "Contact", href: "/contact" },
];
---

<header class="fixed top-0 inset-x-0 z-50 bg-black/60 backdrop-blur border-b border-white/10">
  <div class="max-w-7xl mx-auto px-4 py-3 flex items-center justify-between h-16">
    <button id="menu-button" class="text-white text-2xl transition md:hidden" aria-label="Toggle Menu">
      <i id="menu-icon" class="ri-menu-3-line"></i>
    </button>
    <div class="text-base font-semibold text-white text-center flex-1">
      {title}
    </div>
    <div class="text-white text-xl md:hidden">
      {rightIcon === "bookmark" && (
        <button aria-label="Bookmark" class="hover:text-cyan-400 transition">
          <i class="ri-bookmark-line"></i>
        </button>
      )}
      {rightIcon === "share" && (
        <button aria-label="Share" class="hover:text-cyan-400 transition">
          <i class="ri-share-forward-line"></i>
        </button>
      )}
    </div>

  </div>

  <!-- MOBILE MENU -->
  <div id="mobile-menu" class="md:hidden max-h-0 overflow-hidden transition-all duration-300 ease-in-out bg-black/80 border-t border-white/10">
    <nav class="flex flex-col px-6 py-4 space-y-4 uppercase text-sm font-medium">
      {navItems.map((item) => (
        <a href={item.href} class="text-white hover:text-cyan-400 transition">{item.label}</a>
      ))}
    </nav>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("menu-button");
    const menu = document.getElementById("mobile-menu");
    const icon = document.getElementById("menu-icon");

    if (!toggleBtn || !menu || !icon) return;

    toggleBtn.addEventListener("click", () => {
      menu.classList.toggle("max-h-0");
      menu.classList.toggle("max-h-64");

      const isOpen = icon.classList.contains("ri-close-line");
      icon.className = isOpen ? "ri-menu-3-line" : "ri-close-line";
    });
  });
</script>