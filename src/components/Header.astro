---
import { SITE } from '@/data/site.ts';

const pathname = Astro.url.pathname;
const logo = 'https://wgcslximcxnprmfqtsoh.supabase.co/storage/v1/object/public/favicon//favicon.svg';
const navLinks = [
  { href: "/", text: "Home" },
  { href: "/blog", text: "Blog" },
  { href: "/about", text: "About" },
  { href: "/projek", text: "Projects" },
];
---
<header class="sticky top-0 z-50 w-full bg-zinc-900 backdrop-blur-lg border-b border-white/10">
  <div class="container mx-auto px-4">
    <nav class="flex items-center justify-between h-16" aria-label="Main navigation">
      <a href="/" class="flex items-center gap-3 text-xl font-bold text-gray-50 hover:text-white transition-colors">
        <img src={logo} alt="Logo Situs" class="h-8 w-auto" />
        <span>{SITE.TITLE}</span>
      </a>
      <ul class="hidden sm:flex items-center space-x-8">
        {navLinks.map((link) => {
          const isActive = pathname === link.href || (link.href !== '/' && pathname.startsWith(link.href + '/'));
          return (
            <li>
              <a href={link.href} class:list={[ "flex items-center gap-1.5 transition-colors", isActive ? "text-white font-semibold" : "text-gray-300 hover:text-white" ]}>
                {link.text}
                {link.text === "Projek" && <i class="ri-external-link-line text-sm"></i>}
              </a>
            </li>
          );
        })}
      </ul>
      <div class="sm:hidden">
        <button
          id="hamburger-button"
          type="button"
          class="p-2 rounded-md text-gray-200 hover:bg-white/10 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"
          aria-controls="mobile-menu"
          aria-expanded="false"
          aria-label="Toggle main menu"
        >
          <span class="sr-only">Buka menu utama</span>
          <i id="icon-menu" class="ri-menu-line text-2xl" aria-hidden="true"></i>
          <i id="icon-close" class="ri-close-line text-2xl hidden" aria-hidden="true"></i>
        </button>
      </div>
    </nav>
  </div>
  <div
    id="mobile-menu"
    class="sm:hidden absolute w-full bg-zinc-900/95 backdrop-blur-lg shadow-lg transition-all duration-300 ease-in-out opacity-0 invisible -translate-y-4"
    role="dialog"
    aria-modal="true"
    aria-labelledby="menu-heading"
  >
    <ul class="px-2 pt-2 pb-3 space-y-1">
      {navLinks.map((link) => {
        const isActive = pathname === link.href || (link.href !== '/' && pathname.startsWith(link.href + '/'));
        return (
          <li>
            <a href={link.href} class:list={[ "block rounded-md px-3 py-2 text-base font-medium", isActive ? "bg-white/10 text-white" : "text-gray-300 hover:bg-white/5" ]}>
              {link.text}
            </a>
          </li>
        );
      })}
    </ul>
  </div>
</header>
<script>
  const hamburgerButton = document.getElementById('hamburger-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('icon-menu');
  const closeIcon = document.getElementById('icon-close');

  if (hamburgerButton && mobileMenu && menuIcon && closeIcon) {
    hamburgerButton.addEventListener('click', () => {
      const isExpanded = hamburgerButton.getAttribute('aria-expanded') === 'true';
      hamburgerButton.setAttribute('aria-expanded', String(!isExpanded));

      menuIcon.classList.toggle('hidden');
      closeIcon.classList.toggle('hidden');
      mobileMenu.classList.toggle('opacity-0');
      mobileMenu.classList.toggle('invisible');
      mobileMenu.classList.toggle('-translate-y-4');
    });
  }
</script>