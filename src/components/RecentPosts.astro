---
// src/components/BlogSections.astro
import * as cheerio from 'cheerio';

interface Post {
  id: string;
  title: string;
  url: string;
  published: string;
  content?: string;
  summary?: string;
  images?: Array<{ url: string }>;
  labels?: string[];
}



const API_KEY = import.meta.env.VITE_BLOGGER_API_KEY;
const BLOG_ID = import.meta.env.VITE_BLOGGER_BLOG_ID;

if (!API_KEY || !BLOG_ID) {
  console.error("⛔️ Error: Blogger API Key or Blog ID is missing from environment variables (.env file).");
  console.error("Please make sure VITE_BLOGGER_API_KEY and VITE_BLOGGER_BLOG_ID are set in your .env file.");
}

const BASE_URL = `https://www.googleapis.com/blogger/v3/blogs/${BLOG_ID}/posts?key=${API_KEY}`;

let featuredPost: Post | null = null;
let recentPosts: Post[] = [];

try {
  const featuredResponse = await fetch(`${BASE_URL}&labels=Featured&maxResults=1`);
  if (featuredResponse.ok) {
    const featuredData = await featuredResponse.json();
    if (featuredData.items && featuredData.items.length > 0) {
      featuredPost = featuredData.items[0];
    }
  }

  if (!featuredPost) {
    const latestFeaturedResponse = await fetch(`${BASE_URL}&maxResults=1`);
    if (latestFeaturedResponse.ok) {
      const latestFeaturedData = await latestFeaturedResponse.json();
      if (latestFeaturedData.items && latestFeaturedData.items.length > 0) {
        featuredPost = latestFeaturedData.items[0];
      }
    }
  }

  const recentResponse = await fetch(`${BASE_URL}&maxResults=5`);
  if (recentResponse.ok) {
    const recentData = await recentResponse.json();
    if (recentData.items && recentData.items.length > 0) {
      recentPosts = recentData.items;
      if (featuredPost) {
        recentPosts = recentPosts.filter(post => post.id !== featuredPost!.id);
      }
    }
  }

} catch (error) {
  console.error("🚨 Failed to fetch blog data from Blogger API:", error);
}

const formatDate = (dateString: string) => {
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  try {
    return new Date(dateString).toLocaleDateString('id-ID', options);
  } catch (e) {
    console.error("Invalid date string:", dateString);
    return "Invalid Date";
  }
};

const getThumbnailUrl = (post: Post) => {
  if (post.images && post.images.length > 0) {
    const imageUrl = post.images[0].url;
    return imageUrl.replace(/s\d+(-c)?/, 's600-c').replace(/w\d+-h\d+/, 'w600-h400');
  }
  return 'https://via.placeholder.com/600x400/1f2937/d1d5db?text=No+Image';
};

const cleanSnippet = (htmlString: string | undefined) => {
  if (!htmlString) return '';
  const $ = cheerio.load(htmlString);
  return $.text();
};

const getSlugFromBloggerUrl = (url: string): string => {
  try {
    const urlObj = new URL(url);
    const pathParts = urlObj.pathname.split('/');
    const lastPart = pathParts[pathParts.length - 1];
    const slugWithHtml = lastPart.split('.')[0];
    const finalSlug = slugWithHtml.replace(/^\d{4}\/\d{2}\//, '').replace(/^\d{1,2}\./, '');
    return finalSlug || url;
  } catch (e) {
    console.error("Failed to parse slug from URL:", url, e);
    return url;
  }
};
---

<section class="container mx-auto px-4 py-16 md:py-24">
  {featuredPost && (
    <div class="mb-16">
      <h2 class="text-4xl font-extrabold text-white mb-12 text-center relative after:block after:w-20 after:h-1 after:bg-blue-600 after:mx-auto after:mt-4 after:rounded-full">Featured Post</h2>
      <a href={`/blog/${getSlugFromBloggerUrl(featuredPost.url)}`} class="block relative group">
        <div class="rounded-xl overflow-hidden shadow-2xl bg-gradient-to-br from-gray-800 to-gray-900 border border-gray-700 transform hover:scale-[1.005] transition-transform duration-300 ease-in-out">
          <div class="md:flex flex-col md:flex-row">
            <div class="md:w-1/2 relative">
              <img
                src={getThumbnailUrl(featuredPost)}
                alt={featuredPost.title}
                class="w-full h-64 md:h-80 object-cover transition-opacity duration-300 group-hover:opacity-90"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-6">
                <span class="text-white text-lg font-semibold tracking-wide transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">Baca Selengkapnya</span>
              </div>
            </div>
            <div class="md:w-1/2 p-6 flex flex-col justify-between">
              <div>
                <span class="inline-block bg-blue-600 text-white text-xs font-bold px-4 py-1 rounded-full mb-3 shadow-md">HIGHLIGHT</span>
                <h3 class="text-3xl font-extrabold text-white leading-tight group-hover:text-blue-300 transition-colors">
                  {featuredPost.title}
                </h3>
                <p class="text-gray-400 text-sm mt-3">
                  <span class="font-medium">Dipublikasi:</span> {formatDate(featuredPost.published)}
                </p>
                <p class="text-gray-300 mt-5 leading-relaxed line-clamp-3">
                  {cleanSnippet(featuredPost.summary || featuredPost.content)}
                </p>
              </div>
              <div class="mt-6">
                <span class="text-blue-500 hover:text-blue-400 transition-colors font-semibold flex items-center justify-end">
                  Lihat Lengkapnya
                  <svg class="ml-2 w-4 h-4 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path></svg>
                </span>
              </div>
            </div>
          </div>
        </div>
      </a>
    </div>
  )}

  <hr class="border-t border-gray-700 my-16" />
  <h2 class="text-4xl font-extrabold text-white mb-12 text-center relative after:block after:w-20 after:h-1 after:bg-blue-600 after:mx-auto after:mt-4 after:rounded-full">Recent Posts</h2>
  {recentPosts.length > 0 ? (
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10">
      {recentPosts.map((post) => (
        <a href={`/blog/${getSlugFromBloggerUrl(post.url)}`} class="block group">
          <div class="bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl overflow-hidden shadow-xl border border-gray-700 transform hover:scale-[1.03] transition-transform duration-300 ease-in-out flex flex-col h-full">
            <div class="relative overflow-hidden">
              <img
                src={getThumbnailUrl(post)}
                alt={post.title}
                class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </div>
            <div class="p-6 flex flex-col flex-grow">
              <h3 class="text-xl font-semibold text-white leading-snug group-hover:text-blue-300 transition-colors line-clamp-2">
                {post.title}
              </h3>
              <p class="text-gray-400 text-sm mt-3">
                <span class="font-medium">Dipublikasi:</span> {formatDate(post.published)}
              </p>
              <p class="text-gray-300 mt-4 text-base leading-relaxed line-clamp-3 flex-grow">
                {cleanSnippet(post.summary || post.content)}
              </p>
              <div class="mt-6 text-right">
                <span class="text-blue-500 hover:text-blue-400 transition-colors font-semibold flex items-center justify-end">
                  Baca Selengkapnya
                  <svg class="ml-2 w-4 h-4 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path></svg>
                </span>
              </div>
            </div>
          </div>
        </a>
      ))}
    </div>
  ) : (
    <p class="text-center text-gray-400 text-lg mt-8">Tidak ada post terbaru yang ditemukan. Tambahkan post baru di blog Anda!</p>
  )}
</section>