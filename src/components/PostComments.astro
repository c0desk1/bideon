---
interface Comment {
  id: string;
  author: {
    displayName: string;
    image?: { url: string };
  };
  published: string;
  content: string;
}

const { comments = [] }: { comments?: Comment[] } = Astro.props;
---

<section class="mt-20 max-w-3xl mx-auto">
  <h2 class="text-2xl font-bold mb-6 text-white/90 tracking-tight">Komentar</h2>

  {comments.length === 0 ? (
    <div class="rounded-xl bg-white/5 p-6 text-sm text-white/50 text-center border border-white/10 backdrop-blur-md">
      Belum ada komentar.
    </div>
  ) : (
    <ul class="space-y-6">
      {comments.map(comment => (
        <li class="group relative rounded-xl border border-white/10 bg-white/5 p-5 backdrop-blur-md transition hover:shadow-md hover:border-white/20">
          <div class="flex items-center gap-4 mb-3">
            <img
              src={comment.author.image?.url ?? '/default-avatar.png'}
              alt={comment.author.displayName}
              class="w-9 h-9 rounded-full border border-white/20 shadow"
            />
            <div>
              <p class="text-white font-semibold leading-none">
                {comment.author.displayName}
              </p>
              <p class="text-xs text-white/50">
                {new Date(comment.published).toLocaleDateString("id-ID", {
                  day: "numeric",
                  month: "short",
                  year: "numeric",
                })}
              </p>
            </div>
          </div>
          <div
            class="text-sm text-white/80 leading-relaxed prose prose-invert max-w-none"
            set:html={comment.content}
          />
        </li>
      ))}
    </ul>
  )}
</section>
