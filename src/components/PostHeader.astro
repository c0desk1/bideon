---
// src/components/blog/PostHeader.astro
interface Props {
  post: {
    title: string;
    published: string;
    images?: Array<{ url: string }>;
  };
}

const { post } = Astro.props;

const formatDate = (dateString: string): string => {
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  try {
    return new Date(dateString).toLocaleDateString('id-ID', options);
  } catch (e) {
    console.error("Invalid date string provided:", dateString, e);
    return "Invalid Date";
  }
};

const getThumbnailUrl = (post: Props['post']): string => {
  if (post.images && post.images.length > 0) {
    const imageUrl = post.images[0].url;
    return imageUrl.replace(/s\d+(-c)?/, 's1600-c').replace(/w\d+-h\d+/, 'w1200-h800');
  }
  return 'https://via.placeholder.com/1200x800/1f2937/d1d5db?text=No+Image';
};
---

<div class="bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl shadow-2xl border border-gray-700 p-8 md:p-10 mb-12">
    <h1 class="text-4xl md:text-5xl font-extrabold text-blue-400 mb-4 leading-tight text-center">
        {post.title}
    </h1>
    <p class="text-gray-400 text-sm md:text-base text-center mb-8">
        Dipublikasi pada: <span class="font-medium text-gray-300">{formatDate(post.published)}</span>
    </p>

    {post.images && post.images.length > 0 && (
        <div class="relative w-full h-auto max-h-96 overflow-hidden rounded-lg shadow-xl mb-8">
            <img
                src={getThumbnailUrl(post)}
                alt={post.title}
                class="w-full h-full object-cover"
                loading="eager"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
        </div>
    )}
</div>
