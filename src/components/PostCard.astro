---
// src/components/PostCard.astro
import {
  formatDate,
  estimateReadTime,
  getImageUrl,
  getAstroPostUrl,
  stripHtml
} from '../utils/helpers';

interface Props {
  post: any;
  isFeatured?: boolean;
}

const { post, isFeatured = false } = Astro.props;

const postUrl = getAstroPostUrl(post);
const title = post.title ?? "Tanpa Judul";
const image = getImageUrl(post);
const summary = stripHtml(post.summary || post.content || "").slice(0, 150);
const published = formatDate(post.published);
const readTime = estimateReadTime(post.content || post.summary || "");
const author = post.author?.displayName ?? "Bima Akbar";
const authorImage = post.author?.image?.url;
const labels = post.labels ?? [];
---

<article class="rounded-xl overflow-hidden border border-neutral-800 bg-neutral-900/60 hover:bg-neutral-800 transition-all">
  <div class="relative">
    <img
      src={image}
      alt={title}
      loading="lazy"
      class="w-full aspect-[16/9] object-cover border-b border-neutral-800"
    />
    {isFeatured && (
      <span class="absolute top-3 left-3 bg-yellow-500 text-black text-xs font-semibold px-2 py-1 rounded shadow">
        FEATURED
      </span>
    )}
  </div>

  <div class="p-4 space-y-3">
    <div class="flex items-center text-xs text-neutral-400 gap-2">
      <i class="ri-calendar-line text-sm"></i>
      <time>{published}</time>
      <span>â€¢</span>
      <i class="ri-time-line text-sm"></i>
      <span>{readTime}</span>
    </div>

    <h3 class="text-base text-white font-semibold leading-snug hover:underline">
      <a href={postUrl}>{title}</a>
    </h3>

    <p class="text-sm text-neutral-400">{summary}...</p>

    <div class="flex items-center gap-2 mt-2">
      <img
        src={authorImage}
        alt={author}
        class="w-6 h-6 rounded-full border border-neutral-700 object-cover"
      />
      <span class="text-xs text-neutral-300">{author}</span>
    </div>

    {labels.length > 0 && (
      <div class="flex flex-wrap gap-2 mt-2">
        {labels.slice(0, 3).map((label: any) => (
          <span class="text-xs px-2 py-0.5 rounded bg-neutral-800 text-neutral-400">
            {label}
          </span>
        ))}
      </div>
    )}
  </div>
</article>
