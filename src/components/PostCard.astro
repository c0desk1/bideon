---
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, pubDate, heroImage, tags, category } = post.data;

const formattedDate = new Date(pubDate).toLocaleDateString('id-ID', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<a href={`/blog/${post.data.slug}/`} class="group block glass-panel rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-shadow duration-300 border border-black/5 dark:border-white/10 hover:-translate-y-1 hover:border-oklch(70% 0.2 250)/50">

  {category && (
    <div class="px-6 pt-4 text-sm uppercase font-semibold tracking-wide text-oklch(60% 0.2 250)">
      {category}
    </div>
  )}

  {heroImage && (
    <div class="aspect-video overflow-hidden">
      <img 
        src={heroImage} 
        alt={`Gambar untuk postingan ${title}`}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      />
    </div>
  )}

  <div class="p-6">
    <div class="flex flex-wrap items-center gap-2 text-sm text-muted mb-3">
      <time datetime={pubDate.toISOString()}>{formattedDate}</time>

      {tags && tags.length > 0 && (
        <>
          <span>â€¢</span>
          <div class="flex flex-wrap gap-2">
            {tags.map((tag) => (
              <span class="inline-block">#{tag}</span>
            ))}
          </div>
        </>
      )}
    </div>

    <h3 class="text-xl font-bold text-oklch(var(--text-oklch)) group-hover:text-oklch(70% 0.2 250) transition-colors">
      {title}
    </h3>

    <p class="mt-2 text-muted text-base leading-relaxed">
      {description}
    </p>
  </div>
</a>