---
// src/components/TableOfContents.astro
interface HeadingData {
  id: string;
  level: number;
  text: string;
}

interface Props {
  headings: HeadingData[];
}

const { headings } = Astro.props;
const filteredHeadings = headings.filter(h => h.level >= 2 && h.level <= 3);

const getIndentClass = (level: number) => {
  if (level === 3) return 'ml-4';
  if (level === 4) return 'ml-8';
  return '';
};
---

{filteredHeadings.length > 0 && (
  <nav class="toc-container mb-8 p-4 rounded-lg shadow-md">
    <h3 class="text-xl font-bold text-color-text mb-4">Daftar isi:</h3>
    <ul class="space-y-2">
      {filteredHeadings.map((heading) => (
        <li class="toc-item">
          <a href={`#${heading.id}`} class={`block text-color-text-muted hover:text-color-text transition ${getIndentClass(heading.level)}`}>
            {heading.text}
          </a>
        </li>
      ))}
    </ul>
  </nav>
)}

<style>
  .toc-container {
    background-color: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-left: 4px solid var(--color-accent);
    
    transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  }

  html.light-mode .toc-container {
    background-color: var(--light-color-card-bg);
    border: 1px solid var(--light-color-border);
    border-left: 4px solid var(--light-color-accent);
  }

  .toc-container a {
    word-break: break-word;
    line-height: 1.4;
  }
  .toc-item:not(:last-child) {
    margin-bottom: 0.5rem;
  }
</style>
