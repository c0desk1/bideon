
---
// src/components/posts/PostHeader.astro
import PostMeta from './PostMeta.astro';

interface Crumb {
  name: string;
  url: string;
}

interface Props {
  title: string;
  authorName: string;
  authorImage?: string;
  publishedDate: string;
  updatedDate?: string;
  readTime: string;
  labels?: string[];
  homeCrumb: Crumb;
  categoryCrumb?: Crumb | null;
}

const { title, authorName, authorImage, publishedDate, updatedDate, readTime, labels, homeCrumb, categoryCrumb } = Astro.props;
---
<div>
  <nav aria-label="breadcrumb" class="text-sm text-color-text-muted mb-4">
    <ol class="flex items-center">
      <li class="flex items-center">
        <a href={homeCrumb.url} class="text-color-text-muted hover:text-color-text transition">
          {homeCrumb.name}
        </a>
      </li>
      {categoryCrumb && (
        <li class="flex items-center">
          <span class="mx-2 text-color-text-muted">Ã—</span>
          <a href={categoryCrumb.url} class="text-color-text font-semibold truncate max-w-[calc(100vw-10rem)] sm:max-w-xs md:max-w-md hover:text-color-text-muted transition">
            {categoryCrumb.name}
          </a>
        </li>
      )}
    </ol>
  </nav>

  <h1 class="text-4xl font-bold text-hero-foreground mb-4">{title}</h1>

  <PostMeta
    authorName={authorName}
    authorImage={authorImage}
    publishedDate={publishedDate}
    readTime={readTime}
  />
  
  {updatedDate && publishedDate !== updatedDate && (
    <div class="flex items-center text-sm text-color-text-muted mt-4 mb-4">
      <i class="ri-refresh-line mr-1"></i> Updated {updatedDate}
    </div>
  )}

  {labels && labels.length > 0 && (
    <div class="flex flex-wrap gap-2 mt-4 mb-4">
      {labels.map((label: string) => (
        <span class="labels backdrop-blur-md">{label}</span>
      ))}
    </div>
  )}
</div>

<style>
  .labels {
    background-color: var(--color-card-bg);
    border-radius: calc(infinity * 1px);
    padding: 0.45rem;
    font-size: 0.75rem;
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-text);
    border: solid 2px var(--color-border);
    cursor: pointer;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 2.0em;
  }

  .labels:hover {
    color: var(--color-text-hover);
    background-color: var(--color-bg);
  }
</style>
