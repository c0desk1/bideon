---
// src/components/posts/PostHeader.astro
import PostMeta from './PostMeta.astro';

interface Crumb {
  name: string;
  url: string;
}

interface Props {
  title: string;
  authorName: string;
  authorImage?: string;
  publishedDate: string;
  updatedDate?: string;
  readTime: string;
  viewsCount?: number;
  labels?: string[];
  homeCrumb: Crumb;
  categoryCrumb?: Crumb | null;
  postCrumb: Crumb;
}

const { title, authorName, authorImage, publishedDate, updatedDate, readTime, viewsCount, labels, homeCrumb, categoryCrumb, postCrumb } = Astro.props;
---
<div>
  <nav aria-label="breadcrumb" class="text-sm text-color-text-muted mb-4">
    <ol class="flex items-center space-x-2">
      <li class="flex items-center">
        <a href={homeCrumb.url} class="hover:underline text-color-text-muted hover:text-color-text transition">
          {homeCrumb.name}
        </a>
      </li>
      {categoryCrumb && (
        <li class="flex items-center">
          <span class="mx-2 text-color-text-muted">/</span>
          <a href={categoryCrumb.url} class="hover:underline text-color-text-muted hover:text-color-text transition">
            {categoryCrumb.name}
          </a>
        </li>
      )}
      <li class="flex items-center">
        <span class="mx-2 text-color-text-muted">/</span>
        <span class="text-color-text font-semibold truncate max-w-[calc(100vw-10rem)] sm:max-w-xs md:max-w-md">
          {postCrumb.name}
        </span>
      </li>
    </ol>
  </nav>

  <h1 class="text-4xl font-bold text-hero-foreground mb-4">{title}</h1>

  <PostMeta
    authorName={authorName}
    authorImage={authorImage}
    publishedDate={publishedDate}
    updatedDate={updatedDate}
    readTime={readTime}
    viewsCount={viewsCount}
    labels={labels}
  />

  {labels && labels.length > 0 && (
    <div class="flex flex-wrap gap-2 mt-4 mb-4">
      {labels.map((label: string) => (
        <span class="bg-white/10 text-white/80 backdrop-blur-md text-xs px-2 py-1 rounded-full">{label}</span>
      ))}
    </div>
  )}
</div>
