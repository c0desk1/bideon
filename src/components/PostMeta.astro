---
interface Props {
  author?: {
    displayName: string;
    url: string;
    image?: { url: string };
  };
  published: string;
  content?: string;
}

const { author, published, content } = Astro.props;

const formatDate = (dateString: string): string => {
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  try {
    return new Date(dateString).toLocaleDateString('id-ID', options);
  } catch (e) {
    return "Tanggal Tidak Valid";
  }
};

const getReadTime = (contentHtml: string | undefined): string => {
  if (!contentHtml) return '0 mnt baca';
  const textContent = contentHtml.replace(/<[^>]*>/g, '');
  const words = textContent.split(/\s+/).filter(Boolean).length;
  const minutes = Math.ceil(words / 200);
  return `${minutes} mnt baca`;
};

const avatarUrl = author?.image?.url?.startsWith("http")
  ? author.image.url
  : "https://ssl.gstatic.com/blogger-profile-default_2x.png";
---
<div class="flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-gray-300">
  <div class="flex items-center gap-2">
    <img 
      src={avatarUrl} 
      alt={author?.displayName} 
      class="h-7 w-7 rounded-full object-cover border-2 border-white/20" 
      width="28" 
      height="28"
      loading="lazy"
    />
    <span class="font-medium text-white">{author?.displayName || 'Penulis'}</span>
  </div>

  <span class="hidden text-gray-500 md:inline-block">&bull;</span>
  
  <div class="flex flex-wrap items-center gap-x-4 gap-y-2">
    <div class="flex items-center gap-1.5">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
      </svg>
      <span>{formatDate(published)}</span>
    </div>
    <div class="flex items-center gap-1.5">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      <span>{getReadTime(content)}</span>
    </div>
  </div>
</div>